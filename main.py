import os
import telebot
from flask import Flask, request
from threading import Thread
import time
import requests
import logging

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤ ---
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

app = Flask(__name__)
token = os.getenv("TELEGRAM_TOKEN")

if not token:
    logging.error("‚ùå TELEGRAM_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω. –î–æ–±–∞–≤—å—Ç–µ –µ–≥–æ –≤ Environment Variables –Ω–∞ Render!")
    exit(1)

bot = telebot.TeleBot(token)
WEBHOOK_URL = f"https://{os.getenv('RENDER_SERVICE_NAME')}.onrender.com/{token}"

# --- –ê–≤—Ç–æ–ø—Ä–æ–±—É–∂–¥–µ–Ω–∏–µ ---
def ping_server():
    while True:
        try:
            requests.get(f"https://{os.getenv('RENDER_SERVICE_NAME')}.onrender.com")
            logging.info("üîÑ –ü–∏–Ω–≥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω")
        except Exception as e:
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø–∏–Ω–≥–∞: {e}")
        time.sleep(300)

# --- –í–µ–±—Ö—É–∫–∏ ---
@app.route("/")
def home():
    return "–ë–æ—Ç –∞–∫—Ç–∏–≤–µ–Ω! –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: UptimeRobot + Render"

@app.route(f"/{token}", methods=['POST'])
def webhook():
    if request.headers.get('content-type') == 'application/json':
        json_data = request.get_data().decode('utf-8')
        update = telebot.types.Update.de_json(json_data)
        bot.process_new_updates([update])
        return "OK", 200
    return "Forbidden", 403

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ ---
@bot.message_handler(commands=["start"])
def start(message):
    try:
        markup = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
        buttons = ["–ö–∞—Ç–∞–ª–æ–≥", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫ —Ç–æ–≤–∞—Ä–∞–º", "–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫", "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"]
        markup.add(*[telebot.types.KeyboardButton(btn) for btn in buttons])
        bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=markup)
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /start: {e}")

@bot.message_handler(func=lambda message: True)
def handle_buttons(message):
    try:
        if message.text == "–ö–∞—Ç–∞–ª–æ–≥":
            bot.send_message(message.chat.id, "üîó –°—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞—Ç–∞–ª–æ–≥: [–≤–∞—à_—Å–∞–π—Ç]")

        elif message.text == "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫ —Ç–æ–≤–∞—Ä–∞–º":
            markup = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
            items = ["–õ–ê–í–ê–ù–î–ê", "–ë–ï–†–ì–ê–ú–û–¢", "–ú–Ø–¢–ê", "–ú–ò–ö–°", "–ù–∞–∑–∞–¥"]
            markup.add(*[telebot.types.KeyboardButton(item) for item in items])
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=markup)

        elif message.text == "–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫":
            bot.send_message(message.chat.id, "–ù–∞–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å (–ø—Ä–∏–º–µ—Ä: '–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –º–∞—Å–ª–æ —á–∞–π–Ω–æ–≥–æ –¥–µ—Ä–µ–≤–∞?')")

        elif message.text == "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è":
            bot.send_message(message.chat.id, "üí¨ –û–ø–∏—à–∏—Ç–µ –≤–æ–ø—Ä–æ—Å, —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 30 –º–∏–Ω—É—Ç")

        elif message.text == "–õ–ê–í–ê–ù–î–ê":
            instructions = "üåø –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ª–∞–≤–∞–Ω–¥—ã..."

üîπ <u>–û—Å–Ω–æ–≤–Ω—ã–µ —Å–ø–æ—Å–æ–±—ã –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è</u>:
1. <b>–ê—Ä–æ–º–∞—Ç–µ—Ä–∞–ø–∏—è</b>:
   ‚Ä¢ –ê—Ä–æ–º–∞–ª–∞–º–ø–∞: 3-5 –∫–∞–ø–µ–ª—å –Ω–∞ 15 –º¬≤
   ‚Ä¢ –ò–Ω–≥–∞–ª—è—Ü–∏–∏: 1-2 –∫–∞–ø–ª–∏ –≤ –≥–æ—Ä—è—á—É—é –≤–æ–¥—É (5 –º–∏–Ω)

2. <b>–ö–æ—Å–º–µ—Ç–∏–∫–∞</b>:
   ‚Ä¢ –û–±–æ–≥–∞—â–µ–Ω–∏–µ –∫—Ä–µ–º–æ–≤: 2-3 –∫–∞–ø–ª–∏ –Ω–∞ 10 –º–ª
   ‚Ä¢ –ú–∞—Å—Å–∞–∂: 5 –∫–∞–ø–µ–ª—å –Ω–∞ 10 –º–ª –æ—Å–Ω–æ–≤—ã
   ‚Ä¢ –í–∞–Ω–Ω–∞: 5-7 –∫–∞–ø–µ–ª—å + 1 —Å—Ç.–ª. —Å–æ–ª–∏

3. <b>–ë—ã—Ç–æ–≤–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ</b>:
   ‚Ä¢ –ê—Ä–æ–º–∞—Å–∞—à–µ: 2-3 –∫–∞–ø–ª–∏
   ‚Ä¢ –ê–Ω—Ç–∏—Å–µ–ø—Ç–∏–∫: 10 –∫–∞–ø–µ–ª—å + 100 –º–ª –≤–æ–¥—ã

‚ö†Ô∏è <b>–ú–µ—Ä—ã –ø—Ä–µ–¥–æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏</b>:
   ‚Ä¢ –¢–µ—Å—Ç –Ω–∞ –∞–ª–ª–µ—Ä–≥–∏—é –æ–±—è–∑–∞—Ç–µ–ª–µ–Ω
   ‚Ä¢ –•—Ä–∞–Ω–∏—Ç—å –ø—Ä–∏ +15...+20¬∞C
   ‚Ä¢ –ó–∞–ø—Ä–µ—â–µ–Ω–æ:
     - –ë–µ—Ä–µ–º–µ–Ω–Ω—ã–º (I —Ç—Ä–∏–º–µ—Å—Ç—Ä)
     - –î–µ—Ç—è–º –¥–æ 7 –ª–µ—Ç
     - –ü—Ä–∏ —ç–ø–∏–ª–µ–ø—Å–∏–∏

üí° <b>–õ–∞–π—Ñ—Ö–∞–∫–∏</b>:
   ‚Ä¢ –î–ª—è —Å–Ω–∞: 2 –∫–∞–ø–ª–∏ –Ω–∞ —Å–∞–ª—Ñ–µ—Ç–∫—É —É –ø–æ–¥—É—à–∫–∏
   ‚Ä¢ –†–µ–ø–µ–ª–ª–µ–Ω—Ç: —Å–º–µ—Å—å —Å —Ü–∏—Ç—Ä–æ–Ω–µ–ª–ª–æ–π
   ‚Ä¢ –°–ü–ê –¥–ª—è –≤–æ–ª–æ—Å: 3 –∫–∞–ø–ª–∏ + —Ä–µ–ø–µ–π–Ω–æ–µ –º–∞—Å–ª–æ

üìå <b>–ü–æ—á–µ–º—É –≤—ã–±–∏—Ä–∞—é—Ç –Ω–∞—Å</b>:
   ‚Ä¢ –•–æ–ª–æ–¥–Ω—ã–π –æ—Ç–∂–∏–º
   ‚Ä¢ –°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã ECOCERT
   ‚Ä¢ –û—Ç—á–µ—Ç—ã –ø–æ –∫–∞–∂–¥–æ–π –ø–∞—Ä—Ç–∏–∏
"""

            markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.add(telebot.types.KeyboardButton("–ù–∞–∑–∞–¥ –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º"))
            bot.send_message(message.chat.id, instructions, reply_markup=markup)

        elif message.text == "–ù–∞–∑–∞–¥ –∫ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º":
            markup = telebot.types.ReplyKeyboardMarkup(row_width=1, resize_keyboard=True)
            markup.add(*[telebot.types.KeyboardButton(item) for item in ["–õ–ê–í–ê–ù–î–ê", "–ë–ï–†–ì–ê–ú–û–¢", "–ú–Ø–¢–ê", "–ú–ò–ö–°", "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"]])
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ —Ç–æ–≤–∞—Ä:", reply_markup=markup)

        elif message.text == "–ù–∞–∑–∞–¥ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
            markup = telebot.types.ReplyKeyboardMarkup(row_width=2, resize_keyboard=True)
            markup.add(*[telebot.types.KeyboardButton(btn) for btn in ["–ö–∞—Ç–∞–ª–æ–≥", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∫ —Ç–æ–≤–∞—Ä–∞–º", "–ò–ò-–ø–æ–º–æ—â–Ω–∏–∫", "–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è"]])
            bot.send_message(message.chat.id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=markup)

    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–Ω–æ–ø–∫–∏: {e}")

def run_flask():
    app.run(host="0.0.0.0", port=8080)

if __name__ == "__main__":
    try:
        bot.remove_webhook()
        time.sleep(1)
        bot.set_webhook(url=WEBHOOK_URL)
        
        Thread(target=ping_server, daemon=True).start()
        run_flask()

    except Exception as e:
        logging.critical(f"üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
